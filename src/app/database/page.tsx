'use client'

import React from 'react'
import { motion } from 'framer-motion'
import { useInView } from 'react-intersection-observer'
import { Button } from '../../components/ui/button'
import Link from 'next/link'

const DatabasePage = () => {
  const [heroRef, heroInView] = useInView({ threshold: 0.1, triggerOnce: true })
  const [servicesRef, servicesInView] = useInView({ threshold: 0.1, triggerOnce: true })
  const [aboutRef, aboutInView] = useInView({ threshold: 0.1, triggerOnce: true })
  const [benefitsRef, benefitsInView] = useInView({ threshold: 0.1, triggerOnce: true })
  const [featuresRef, featuresInView] = useInView({ threshold: 0.1, triggerOnce: true })
  const [useCasesRef, useCasesInView] = useInView({ threshold: 0.1, triggerOnce: true })

  const fadeInUp = {
    hidden: { opacity: 0, y: 60 },
    visible: { opacity: 1, y: 0, transition: { duration: 0.6, ease: "easeOut" } }
  }

  const staggerContainer = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2
      }
    }
  }

  const services = [
    {
      icon: 'üíæ',
      title: 'L∆∞u tr·ªØ d·ªØ li·ªáu',
      description: 'Ch√∫ng t√¥i x√¢y d·ª±ng h·ªá th·ªëng l∆∞u tr·ªØ t·ª´ n·ªÅn t·∫£ng, t·ªëi ∆∞u h√≥a c·∫•u tr√∫c d·ªØ li·ªáu, hi·ªáu su·∫•t v√† b·∫£o m·∫≠t ƒë·ªÉ gi√∫p c∆° s·ªü d·ªØ li·ªáu c·ªßa b·∫°n ho·∫°t ƒë·ªông ·ªïn ƒë·ªãnh v√† ti·∫øp c·∫≠n ƒë√∫ng th√¥ng tin. ƒêi·ªÅu n√†y mang l·∫°i truy xu·∫•t ch·∫•t l∆∞·ª£ng cao v√† ƒë·∫£m b·∫£o kho·∫£n ƒë·∫ßu t∆∞ c·ªßa b·∫°n ph√°t huy hi·ªáu qu·∫£ t·ªëi ƒëa.'
    },
    {
      icon: 'üöÄ',
      title: 'T·ªëi ∆∞u hi·ªáu nƒÉng',
      description: 'T·ªëi ∆∞u h√≥a hi·ªáu nƒÉng database mang l·∫°i kh·∫£ nƒÉng x·ª≠ l√Ω t·ª©c th√¨ cho h·ªá th·ªëng c·ªßa b·∫°n. Ch√∫ng t√¥i t·∫°o ra c√°c c·∫•u h√¨nh ƒë∆∞·ª£c t√πy ch·ªânh tr√™n MySQL, PostgreSQL v√† MongoDB ƒë·ªÉ ƒë√°p ·ª©ng nh·ªØng y√™u c·∫ßu x·ª≠ l√Ω cao v√† th√∫c ƒë·∫©y hi·ªáu su·∫•t. ƒê√¢y l√† c√°ch nhanh ch√≥ng v√† c√≥ th·ªÉ ƒëo l∆∞·ªùng ƒë∆∞·ª£c ƒë·ªÉ h·ªó tr·ª£ tƒÉng tr∆∞·ªüng.'
    },
    {
      icon: 'üîß',
      title: 'Qu·∫£n tr·ªã h·ªá th·ªëng',
      description: 'Qu·∫£n tr·ªã hi·ªáu qu·∫£ l√† ch√¨a kh√≥a ƒë·ªÉ v·∫≠n h√†nh ·ªïn ƒë·ªãnh. D·ªãch v·ª• qu·∫£n tr·ªã database c·ªßa ch√∫ng t√¥i bi·∫øn nh·ªØng y√™u c·∫ßu ph·ª©c t·∫°p th√†nh quy tr√¨nh t·ª± ƒë·ªông v√† d·ªÖ gi√°m s√°t. T·ª´ backup ƒë·∫øn monitoring, ch√∫ng t√¥i l√†m vi·ªác v·ªõi s·ª± r√µ r√†ng v√† m·ª•c ƒë√≠ch ƒë·ªÉ ƒë·∫£m b·∫£o h·ªá th·ªëng lu√¥n s·∫µn s√†ng.'
    }
  ]

  const benefits = [
    {
      title: 'Hi·ªáu nƒÉng v∆∞·ª£t tr·ªôi, ·ªïn ƒë·ªãnh 24/7',
      description: 'T·ªëi ∆∞u x·ª≠ l√Ω truy v·∫•n, t·ªëc ƒë·ªô ƒë·ªçc/ghi cao, ƒë√°p ·ª©ng nhu c·∫ßu d·ªØ li·ªáu l·ªõn v√† th·ªùi gian th·ª±c.'
    },
    {
      title: 'Sao l∆∞u v√† kh√¥i ph·ª•c d·ªØ li·ªáu',
      description: 'H·ªá th·ªëng backup ƒë·ªãnh k·ª≥, h·ªó tr·ª£ kh√¥i ph·ª•c nhanh ch√≥ng gi√∫p gi·∫£m thi·ªÉu r·ªßi ro m·∫•t m√°t d·ªØ li·ªáu.'
    },
    {
      title: 'B·∫£o m·∫≠t d·ªØ li·ªáu to√†n di·ªán',
      description: 'T√≠ch h·ª£p m√£ h√≥a d·ªØ li·ªáu, ph√¢n quy·ªÅn truy c·∫≠p, t∆∞·ªùng l·ª≠a v√† gi√°m s√°t truy c·∫≠p b·∫•t th∆∞·ªùng.'
    },
    {
      title: 'Qu·∫£n l√Ω ƒë∆°n gi·∫£n, d·ªÖ t√≠ch h·ª£p',
      description: 'H·ªó tr·ª£ c√°c h·ªá qu·∫£n tr·ªã ph·ªï bi·∫øn nh∆∞ MySQL, PostgreSQL, MongoDB‚Ä¶, t√≠ch h·ª£p API v√† giao di·ªán qu·∫£n tr·ªã th√¢n thi·ªán.'
    }
  ]

  const features = [
    {
      title: 'Tri·ªÉn khai nhanh c√°c h·ªá qu·∫£n tr·ªã CSDL ph·ªï bi·∫øn',
      description: 'T·∫°o database ch·ªâ trong v√†i ph√∫t v·ªõi c√°c l·ª±a ch·ªçn MySQL, PostgreSQL, MariaDB, MongoDB v√† nhi·ªÅu h·ªá qu·∫£n tr·ªã kh√°c.'
    },
    {
      title: 'Kh·∫£ nƒÉng m·ªü r·ªông theo nhu c·∫ßu s·ª≠ d·ª•ng',
      description: 'D·ªÖ d√†ng tƒÉng dung l∆∞·ª£ng l∆∞u tr·ªØ, k·∫øt n·ªëi nhi·ªÅu ·ª©ng d·ª•ng c√πng l√∫c m√† kh√¥ng ·∫£nh h∆∞·ªüng hi·ªáu su·∫•t h·ªá th·ªëng.'
    },
    {
      title: 'T·ª± ƒë·ªông sao l∆∞u ƒë·ªãnh k·ª≥ v√† snapshot theo y√™u c·∫ßu',
      description: 'T√≠ch h·ª£p snapshot th·ªß c√¥ng v√† backup h√†ng ng√†y, ƒë·∫£m b·∫£o d·ªØ li·ªáu lu√¥n s·∫µn s√†ng kh√¥i ph·ª•c khi c·∫ßn thi·∫øt.'
    },
    {
      title: 'T·ªëi ∆∞u b·∫£o m·∫≠t v√† gi√°m s√°t truy c·∫≠p',
      description: 'H·ªá th·ªëng c·∫£nh b√°o ƒëƒÉng nh·∫≠p b·∫•t th∆∞·ªùng, ghi log truy v·∫•n, gi·ªõi h·∫°n IP truy c·∫≠p v√† ph√¢n quy·ªÅn ch·∫∑t ch·∫Ω.'
    }
  ]

  const useCases = [
    {
      title: '·ª®ng d·ª•ng qu·∫£n l√Ω kh√°ch h√†ng (CRM) cho doanh nghi·ªáp SME',
      description: 'D·ªØ li·ªáu kh√°ch h√†ng, l·ªãch s·ª≠ giao d·ªãch, th√¥ng tin li√™n h·ªá... ƒë∆∞·ª£c l∆∞u tr·ªØ t·∫≠p trung tr√™n cloud, d·ªÖ d√†ng truy c·∫≠p v√† ƒë·ªìng b·ªô gi·ªØa c√°c b·ªô ph·∫≠n.'
    },
    {
      title: 'C·ªïng thanh to√°n v√† h·ªá th·ªëng ƒë∆°n h√†ng',
      description: 'Cloud Database ƒë·∫£m b·∫£o t·ªëc ƒë·ªô x·ª≠ l√Ω giao d·ªãch cao, truy xu·∫•t ƒë∆°n h√†ng ch√≠nh x√°c v√† ƒë·ªìng th·ªùi ph·ª•c v·ª• h√†ng ngh√¨n k·∫øt n·ªëi t·ª´ ng∆∞·ªùi d√πng cu·ªëi.'
    },
    {
      title: 'L∆∞u tr·ªØ d·ªØ li·ªáu c·∫£m bi·∫øn t·ª´ thi·∫øt b·ªã IoT',
      description: 'Ghi nh·∫≠n d·ªØ li·ªáu th·ªùi gian th·ª±c t·ª´ h√†ng trƒÉm/th·∫≠m ch√≠ h√†ng ngh√¨n thi·∫øt b·ªã ƒë·∫ßu cu·ªëi, ph·ª•c v·ª• gi√°m s√°t, c·∫£nh b√°o v√† ph√¢n t√≠ch.'
    },
    {
      title: 'L√†m backend d·ªØ li·ªáu cho mobile app',
      description: 'H·ªó tr·ª£ l∆∞u tr·ªØ v√† ƒë·ªìng b·ªô d·ªØ li·ªáu ng∆∞·ªùi d√πng (t√†i kho·∫£n, h√†nh vi, n·ªôi dung...) v·ªõi t·ªëc ƒë·ªô cao, gi√∫p ·ª©ng d·ª•ng mobile ho·∫°t ƒë·ªông m∆∞·ª£t m√† v√† ·ªïn ƒë·ªãnh.'
    }
  ]

  return (
    <main className="min-h-screen bg-white">
      {/* Hero Section */}
      <section 
        ref={heroRef}
        className="bg-gradient-to-br from-[#2E1065] via-[#1A0B3D] to-[#0F0B3D] py-20 lg:py-32 relative overflow-hidden"
      >
        {/* Background decorations */}
        <div className="absolute inset-0 overflow-hidden pointer-events-none">
          <div className="absolute top-20 left-10 text-6xl animate-bounce opacity-20">üíæ</div>
          <div className="absolute top-40 right-20 text-4xl animate-bounce opacity-30" style={{ animationDelay: '0.5s' }}>üóÑÔ∏è</div>
          <div className="absolute bottom-40 left-1/4 text-5xl animate-bounce opacity-25" style={{ animationDelay: '1s' }}>üìä</div>
          <div className="absolute top-60 left-1/2 text-3xl animate-bounce opacity-20" style={{ animationDelay: '1.5s' }}>‚ö°</div>
        </div>

        <div className="max-w-7xl mx-auto px-6 lg:px-8 relative z-10">
          <motion.div
            variants={fadeInUp}
            initial="hidden"
            animate={heroInView ? "visible" : "hidden"}
            className="text-center max-w-4xl mx-auto"
          >
            <h1 className="text-4xl lg:text-6xl font-bold text-white mb-6 leading-tight">
              L∆∞u tr·ªØ v√† v·∫≠n h√†nh d·ªØ li·ªáu ·ªïn ƒë·ªãnh v·ªõi Database
            </h1>
            <p className="text-lg lg:text-xl text-gray-200 mb-8 leading-relaxed">
              Database h·ªó tr·ª£ l∆∞u tr·ªØ, truy xu·∫•t v√† m·ªü r·ªông d·ªØ li·ªáu hi·ªáu qu·∫£ v·ªõi ƒë·ªô b·∫£o m·∫≠t cao, s·∫µn s√†ng ƒë√°p ·ª©ng nhu c·∫ßu tƒÉng tr∆∞·ªüng c·ªßa h·ªá th·ªëng doanh nghi·ªáp.
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Link href="/contact">
                <Button size="lg" className="bg-gradient-to-r from-cyan-400 to-green-400 hover:from-cyan-500 hover:to-green-500 text-white px-8 py-3 text-lg">
                  Tr·∫£i nghi·ªám ngay
                </Button>
              </Link>
              <Button variant="outline" size="lg" className="border-2 border-white text-white hover:bg-white hover:text-slate-900 px-8 py-3 text-lg">
                T√¨m hi·ªÉu th√™m
              </Button>
            </div>
          </motion.div>
        </div>
      </section>

      {/* Services Section */}
      <section ref={servicesRef} className="py-20 lg:py-32 bg-white">
        <div className="max-w-7xl mx-auto px-6 lg:px-8">
          <motion.div
            variants={fadeInUp}
            initial="hidden"
            animate={servicesInView ? "visible" : "hidden"}
            className="text-center mb-16"
          >
            <h2 className="text-3xl lg:text-5xl font-bold text-gray-900 mb-6">
              C√°c d·ªãch v·ª• ch√≠nh c·ªßa VCLOUD Database
            </h2>
            <p className="text-lg text-gray-600 max-w-4xl mx-auto leading-relaxed">
              Ch√∫ng t√¥i cung c·∫•p gi·∫£i ph√°p c∆° s·ªü d·ªØ li·ªáu ƒë√°m m√¢y to√†n di·ªán t·ª´ thi·∫øt l·∫≠p, qu·∫£n l√Ω ƒë·∫øn t·ªëi ∆∞u h√≥a hi·ªáu su·∫•t v√† b·∫£o m·∫≠t li√™n t·ª•c
            </p>
          </motion.div>

          <motion.div
            variants={staggerContainer}
            initial="hidden"
            animate={servicesInView ? "visible" : "hidden"}
            className="grid md:grid-cols-3 gap-8 lg:gap-12"
          >
            {services.map((service, index) => (
              <motion.div
                key={index}
                variants={fadeInUp}
                className="bg-white rounded-2xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1 border border-gray-100 hover:border-cyan-200"
              >
                <div className="text-4xl mb-6">{service.icon}</div>
                <h3 className="text-xl lg:text-2xl font-bold text-gray-900 mb-4">
                  {service.title}
                </h3>
                <p className="text-gray-600 leading-relaxed">
                  {service.description}
                </p>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </section>

      {/* About Section */}
      <section ref={aboutRef} className="py-20 lg:py-32 bg-slate-50">
        <div className="max-w-7xl mx-auto px-6 lg:px-8">
          <motion.div
            variants={fadeInUp}
            initial="hidden"
            animate={aboutInView ? "visible" : "hidden"}
            className="max-w-4xl mx-auto text-center"
          >
            <h2 className="text-3xl lg:text-5xl font-bold text-gray-900 mb-8">
              Database l√† g√¨?
            </h2>
            <p className="text-lg lg:text-xl text-gray-600 leading-relaxed">
              Database (C∆° s·ªü d·ªØ li·ªáu) l√† h·ªá th·ªëng l∆∞u tr·ªØ th√¥ng tin c√≥ c·∫•u tr√∫c, cho ph√©p truy xu·∫•t, x·ª≠ l√Ω v√† qu·∫£n l√Ω d·ªØ li·ªáu m·ªôt c√°ch hi·ªáu qu·∫£. Trong m√¥i tr∆∞·ªùng cloud, cloud database l√† d·ªãch v·ª• cung c·∫•p n·ªÅn t·∫£ng l∆∞u tr·ªØ d·ªØ li·ªáu tr·ª±c tuy·∫øn, h·ªó tr·ª£ sao l∆∞u, m·ªü r·ªông v√† t·ªëi ∆∞u hi·ªáu nƒÉng cho ·ª©ng d·ª•ng v√† ph√¢n t√≠ch d·ªØ li·ªáu doanh nghi·ªáp.
            </p>
          </motion.div>
        </div>
      </section>

      {/* Benefits Section */}
      <section ref={benefitsRef} className="py-20 lg:py-32 bg-white">
        <div className="max-w-7xl mx-auto px-6 lg:px-8">
          <motion.div
            variants={fadeInUp}
            initial="hidden"
            animate={benefitsInView ? "visible" : "hidden"}
            className="text-center mb-16"
          >
            <h2 className="text-3xl lg:text-5xl font-bold text-gray-900 mb-6">
              L·ª£i √≠ch ch√≠nh c·ªßa Cloud Database
            </h2>
          </motion.div>

          <motion.div
            variants={staggerContainer}
            initial="hidden"
            animate={benefitsInView ? "visible" : "hidden"}
            className="grid md:grid-cols-2 gap-8 lg:gap-12"
          >
            {benefits.map((benefit, index) => (
              <motion.div
                key={index}
                variants={fadeInUp}
                className="bg-white rounded-2xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1 border border-gray-100 hover:border-cyan-200"
              >
                <h3 className="text-xl lg:text-2xl font-bold text-gray-900 mb-4">
                  {benefit.title}
                </h3>
                <p className="text-gray-600 leading-relaxed">
                  {benefit.description}
                </p>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </section>

      {/* Features Section */}
      <section ref={featuresRef} className="py-20 lg:py-32 bg-slate-50">
        <div className="max-w-7xl mx-auto px-6 lg:px-8">
          <motion.div
            variants={fadeInUp}
            initial="hidden"
            animate={featuresInView ? "visible" : "hidden"}
            className="text-center mb-16"
          >
            <h2 className="text-3xl lg:text-5xl font-bold text-gray-900 mb-6">
              T√≠nh nƒÉng n·ªïi b·∫≠t c·ªßa Cloud Database
            </h2>
          </motion.div>

          <motion.div
            variants={staggerContainer}
            initial="hidden"
            animate={featuresInView ? "visible" : "hidden"}
            className="grid md:grid-cols-2 gap-8 lg:gap-12"
          >
            {features.map((feature, index) => (
              <motion.div
                key={index}
                variants={fadeInUp}
                className="bg-white rounded-2xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1 border-l-4 border-l-cyan-400 border border-gray-100"
              >
                <h3 className="text-xl lg:text-2xl font-bold text-gray-900 mb-4">
                  {feature.title}
                </h3>
                <p className="text-gray-600 leading-relaxed">
                  {feature.description}
                </p>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </section>

      {/* Use Cases Section */}
      <section ref={useCasesRef} className="py-20 lg:py-32 bg-white">
        <div className="max-w-7xl mx-auto px-6 lg:px-8">
          <motion.div
            variants={fadeInUp}
            initial="hidden"
            animate={useCasesInView ? "visible" : "hidden"}
            className="text-center mb-16"
          >
            <h2 className="text-3xl lg:text-5xl font-bold text-gray-900 mb-6">
              T√¨nh hu·ªëng ·ª©ng d·ª•ng th·ª±c t·∫ø
            </h2>
          </motion.div>

          <motion.div
            variants={staggerContainer}
            initial="hidden"
            animate={useCasesInView ? "visible" : "hidden"}
            className="grid md:grid-cols-2 gap-8 lg:gap-12"
          >
            {useCases.map((useCase, index) => (
              <motion.div
                key={index}
                variants={fadeInUp}
                className="bg-white rounded-2xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1 border border-gray-100 group hover:border-cyan-200"
              >
                <h3 className="text-xl lg:text-2xl font-bold text-gray-900 mb-4 group-hover:text-cyan-600 transition-colors duration-300">
                  {useCase.title}
                </h3>
                <p className="text-gray-600 leading-relaxed">
                  {useCase.description}
                </p>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 lg:py-32 bg-gradient-to-r from-[#2E1065] via-[#1A0B3D] to-[#0F0B3D]">
        <div className="max-w-7xl mx-auto px-6 lg:px-8 text-center">
          <motion.div
            variants={fadeInUp}
            initial="hidden"
            whileInView="visible"
            viewport={{ once: true }}
          >
            <h2 className="text-3xl lg:text-5xl font-bold text-white mb-6 leading-tight">
              Tr·∫£i nghi·ªám ngay Cloud Database gi·∫£i ph√°p c∆° s·ªü d·ªØ li·ªáu hi·ªán ƒë·∫°i
            </h2>
            <p className="text-lg lg:text-xl text-gray-200 mb-8 max-w-3xl mx-auto leading-relaxed">
              Li√™n h·ªá ngay ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n v√† tri·ªÉn khai Cloud Database cho doanh nghi·ªáp chuy·ªÉn ƒë·ªïi s·ªë c·ªßa b·∫°n.
            </p>
            <Link href="/contact">
              <Button size="lg" className="bg-gradient-to-r from-cyan-400 to-green-400 hover:from-cyan-500 hover:to-green-500 text-white px-8 py-3 text-lg font-semibold">
                Li√™n h·ªá t∆∞ v·∫•n mi·ªÖn ph√≠
              </Button>
            </Link>
          </motion.div>
        </div>
      </section>
    </main>
  )
}

export default DatabasePage 