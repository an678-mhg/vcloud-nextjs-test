'use client'

import React from 'react'
import { motion } from 'framer-motion'
import { useInView } from 'react-intersection-observer'
import { Button } from '../../components/ui/button'
import Link from 'next/link'

const NetworkingPage = () => {
  const [heroRef, heroInView] = useInView({ threshold: 0.1, triggerOnce: true })
  const [servicesRef, servicesInView] = useInView({ threshold: 0.1, triggerOnce: true })
  const [aboutRef, aboutInView] = useInView({ threshold: 0.1, triggerOnce: true })
  const [benefitsRef, benefitsInView] = useInView({ threshold: 0.1, triggerOnce: true })
  const [featuresRef, featuresInView] = useInView({ threshold: 0.1, triggerOnce: true })
  const [useCasesRef, useCasesInView] = useInView({ threshold: 0.1, triggerOnce: true })

  const fadeInUp = {
    hidden: { opacity: 0, y: 60 },
    visible: { opacity: 1, y: 0, transition: { duration: 0.6, ease: "easeOut" } }
  }

  const staggerContainer = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2
      }
    }
  }

  const services = [
    {
      icon: 'üîí',
      title: 'B·∫£o m·∫≠t m·∫°ng',
      description: 'T∆∞·ªùng l·ª≠a th√¥ng minh, ph√¢n quy·ªÅn truy c·∫≠p chi ti·∫øt v√† b·∫£o v·ªá kh·ªèi c√°c m·ªëi ƒëe d·ªça m·∫°ng hi·ªán ƒë·∫°i.'
    },
    {
      icon: '‚ö°',
      title: 'T·ªëi ∆∞u hi·ªáu su·∫•t',
      description: 'T·ª± ƒë·ªông c√¢n b·∫±ng t·∫£i, t·ªëi ∆∞u ƒë·ªãnh tuy·∫øn v√† ƒë·∫£m b·∫£o ƒë·ªô tr·ªÖ th·∫•p nh·∫•t cho ·ª©ng d·ª•ng c·ªßa b·∫°n.'
    },
    {
      icon: 'üåê',
      title: 'Qu·∫£n l√Ω m·∫°ng',
      description: 'Giao di·ªán tr·ª±c quan, gi√°m s√°t real-time v√† t·ª± ƒë·ªông h√≥a c√°c t√°c v·ª• qu·∫£n l√Ω m·∫°ng ph·ª©c t·∫°p.'
    }
  ]

  const benefits = [
    {
      title: 'K·∫øt n·ªëi th√¥ng minh, ki·∫øn tr√∫c linh ho·∫°t',
      description: 'Thi·∫øt k·∫ø m·∫°ng t·ª± ƒë·ªông th√≠ch ·ª©ng v·ªõi nhu c·∫ßu thay ƒë·ªïi, d·ªÖ d√†ng m·ªü r·ªông v√† t√°i c·∫•u h√¨nh.'
    },
    {
      title: 'B·∫£o m·∫≠t t·ª´ t·∫ßng m·∫°ng',
      description: 'B·∫£o v·ªá ƒëa l·ªõp v·ªõi firewall, VPN v√† ph√¢n quy·ªÅn truy c·∫≠p chi ti·∫øt ƒë·∫øn t·ª´ng t√†i nguy√™n.'
    },
    {
      title: 'Hi·ªáu su·∫•t truy·ªÅn t·∫£i t·ªëi ∆∞u',
      description: 'T·ªëi ∆∞u bƒÉng th√¥ng, gi·∫£m ƒë·ªô tr·ªÖ v√† ƒë·∫£m b·∫£o ch·∫•t l∆∞·ª£ng d·ªãch v·ª• (QoS) cho c√°c ·ª©ng d·ª•ng quan tr·ªçng.'
    },
    {
      title: 'T·ª± ƒë·ªông h√≥a, d·ªÖ t√≠ch h·ª£p DevOps',
      description: 'API ƒë·∫ßy ƒë·ªß, t√≠ch h·ª£p CI/CD v√† t·ª± ƒë·ªông h√≥a tri·ªÉn khai h·∫° t·∫ßng m·∫°ng theo m√¥ h√¨nh Infrastructure as Code.'
    }
  ]

  const features = [
    {
      title: 'Thi·∫øt l·∫≠p m·∫°ng ri√™ng ·∫£o (VPC/VPN)',
      description: 'T·∫°o m√¥i tr∆∞·ªùng m·∫°ng ri√™ng bi·ªát, an to√†n v·ªõi kh·∫£ nƒÉng t√πy ch·ªânh ƒë·ªãnh tuy·∫øn v√† k·∫øt n·ªëi li√™n v√πng.'
    },
    {
      title: 'T∆∞·ªùng l·ª≠a v√† ph√¢n quy·ªÅn truy c·∫≠p theo l·ªõp',
      description: 'Ki·ªÉm so√°t l∆∞u l∆∞·ª£ng m·∫°ng chi ti·∫øt v·ªõi c√°c quy t·∫Øc b·∫£o m·∫≠t linh ho·∫°t v√† ph√¢n quy·ªÅn theo vai tr√≤.'
    },
    {
      title: 'H·ªó tr·ª£ k·∫øt n·ªëi n·ªôi b·ªô v√† li√™n v√πng (interconnect)',
      description: 'K·∫øt n·ªëi an to√†n gi·ªØa c√°c data center, cloud provider v√† m√¥i tr∆∞·ªùng hybrid v·ªõi bƒÉng th√¥ng cao.'
    },
    {
      title: 'Kh·∫£ nƒÉng theo d√µi v√† c·∫£nh b√°o l∆∞u l∆∞·ª£ng b·∫•t th∆∞·ªùng',
      description: 'Gi√°m s√°t real-time, ph√°t hi·ªán anomaly v√† c·∫£nh b√°o proactive v·ªÅ c√°c v·∫•n ƒë·ªÅ b·∫£o m·∫≠t ho·∫∑c hi·ªáu su·∫•t.'
    }
  ]

  const useCases = [
    {
      title: 'Thi·∫øt l·∫≠p m·∫°ng ri√™ng cho t·ª´ng m√¥i tr∆∞·ªùng',
      description: 'T√°ch bi·ªát ho√†n to√†n m√¥i tr∆∞·ªùng development, staging v√† production v·ªõi c√°c ch√≠nh s√°ch b·∫£o m·∫≠t ri√™ng bi·ªát.'
    },
    {
      title: 'TƒÉng c∆∞·ªùng b·∫£o m·∫≠t h·ªá th·ªëng b·∫±ng firewall',
      description: 'Tri·ªÉn khai t∆∞·ªùng l·ª≠a th√¥ng minh v·ªõi kh·∫£ nƒÉng h·ªçc m√°y ƒë·ªÉ ph√°t hi·ªán v√† ngƒÉn ch·∫∑n c√°c m·ªëi ƒëe d·ªça m·ªõi.'
    },
    {
      title: 'Ph√¢n t·∫ßng m·∫°ng cho ki·∫øn tr√∫c ·ª©ng d·ª•ng',
      description: 'Thi·∫øt k·∫ø m·∫°ng theo m√¥ h√¨nh multi-tier v·ªõi c√°c l·ªõp web, application v√† database ƒë∆∞·ª£c b·∫£o m·∫≠t ri√™ng bi·ªát.'
    },
    {
      title: 'M·ªü r·ªông h·ªá th·ªëng d·ªÖ d√†ng theo t·ª´ng d·ª± √°n ho·∫∑c chi·∫øn d·ªãch',
      description: 'Auto-scaling m·∫°ng theo nhu c·∫ßu, h·ªó tr·ª£ traffic spikes v√† tri·ªÉn khai nhanh ch√≥ng cho c√°c chi·∫øn d·ªãch l·ªõn.'
    }
  ]

  return (
    <main className="min-h-screen bg-white">
      {/* Hero Section */}
      <section 
        ref={heroRef}
        className="bg-gradient-to-br from-[#2E1065] via-[#1A0B3D] to-[#0F0B3D] py-20 lg:py-32 relative overflow-hidden"
      >
        {/* Background decorations similar to hero */}
        <div className="absolute inset-0 overflow-hidden pointer-events-none">
          <div className="absolute top-20 left-10 text-6xl animate-bounce opacity-20">‚òÅÔ∏è</div>
          <div className="absolute top-40 right-20 text-4xl animate-bounce opacity-30" style={{ animationDelay: '0.5s' }}>‚òÅÔ∏è</div>
          <div className="absolute bottom-40 left-1/4 text-5xl animate-bounce opacity-25" style={{ animationDelay: '1s' }}>‚òÅÔ∏è</div>
        </div>

        <div className="max-w-7xl mx-auto px-6 lg:px-8 relative z-10">
          <motion.div
            variants={fadeInUp}
            initial="hidden"
            animate={heroInView ? "visible" : "hidden"}
            className="text-center max-w-4xl mx-auto"
          >
            <h1 className="text-4xl lg:text-6xl font-bold text-white mb-6 leading-tight">
              H·∫° t·∫ßng m·∫°ng ƒë√°m m√¢y linh ho·∫°t, k·∫øt n·ªëi m·∫°nh m·∫Ω, b·∫£o m·∫≠t t·ªëi ƒëa
            </h1>
            <p className="text-lg lg:text-xl text-gray-200 mb-8 leading-relaxed">
              K·∫øt n·ªëi linh ho·∫°t, b·∫£o m·∫≠t v·ªØng ch·∫Øc v√† s·∫µn s√†ng m·ªü r·ªông. VCLOUD Networking gi√∫p h·ªá th·ªëng c·ªßa b·∫°n v·∫≠n h√†nh m∆∞·ª£t m√† ·ªü m·ªçi quy m√¥.
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Link href="/contact">
                <Button size="lg" className="bg-gradient-to-r from-cyan-400 to-green-400 hover:from-cyan-500 hover:to-green-500 text-white px-8 py-3 text-lg">
                  B·∫Øt ƒë·∫ßu ngay
                </Button>
              </Link>
              <Button variant="outline" size="lg" className="border-2 border-white text-white hover:bg-white hover:text-slate-900 px-8 py-3 text-lg">
                T√¨m hi·ªÉu th√™m
              </Button>
            </div>
          </motion.div>
        </div>
      </section>

      {/* Services Section */}
      <section ref={servicesRef} className="py-20 lg:py-32 bg-white">
        <div className="max-w-7xl mx-auto px-6 lg:px-8">
          <motion.div
            variants={fadeInUp}
            initial="hidden"
            animate={servicesInView ? "visible" : "hidden"}
            className="text-center mb-16"
          >
            <h2 className="text-3xl lg:text-5xl font-bold text-gray-900 mb-6">
              C√°c d·ªãch v·ª• ch√≠nh c·ªßa VCLOUD Networking
            </h2>
            <p className="text-lg text-gray-600 max-w-4xl mx-auto leading-relaxed">
              Ch√∫ng t√¥i cung c·∫•p gi·∫£i ph√°p m·∫°ng ƒë√°m m√¢y to√†n di·ªán t·ª´ thi·∫øt k·∫ø, tri·ªÉn khai ƒë·∫øn h·ªó tr·ª£ v√† t·ªëi ∆∞u h√≥a hi·ªáu su·∫•t li√™n t·ª•c
            </p>
          </motion.div>

          <motion.div
            variants={staggerContainer}
            initial="hidden"
            animate={servicesInView ? "visible" : "hidden"}
            className="grid md:grid-cols-3 gap-8 lg:gap-12"
          >
            {services.map((service, index) => (
              <motion.div
                key={index}
                variants={fadeInUp}
                className="bg-white rounded-2xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1 border border-gray-100 hover:border-cyan-200"
              >
                <div className="text-4xl mb-6">{service.icon}</div>
                <h3 className="text-xl lg:text-2xl font-bold text-gray-900 mb-4">
                  {service.title}
                </h3>
                <p className="text-gray-600 leading-relaxed">
                  {service.description}
                </p>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </section>

      {/* About Section */}
      <section ref={aboutRef} className="py-20 lg:py-32 bg-slate-50">
        <div className="max-w-7xl mx-auto px-6 lg:px-8">
          <motion.div
            variants={fadeInUp}
            initial="hidden"
            animate={aboutInView ? "visible" : "hidden"}
            className="max-w-4xl mx-auto text-center"
          >
            <h2 className="text-3xl lg:text-5xl font-bold text-gray-900 mb-8">
              Cloud Networking l√† g√¨?
            </h2>
            <p className="text-lg lg:text-xl text-gray-600 leading-relaxed">
              Cloud Networking l√† gi·∫£i ph√°p m·∫°ng tr√™n n·ªÅn t·∫£ng ƒëi·ªán to√°n ƒë√°m m√¢y, cho ph√©p doanh nghi·ªáp thi·∫øt l·∫≠p, qu·∫£n l√Ω v√† t·ªëi ∆∞u h√≥a h·ªá th·ªëng k·∫øt n·ªëi gi·ªØa c√°c m√°y ch·ªß ·∫£o, d·ªãch v·ª• cloud, ng∆∞·ªùi d√πng v√† c√°c trung t√¢m d·ªØ li·ªáu. ƒê√¢y l√† y·∫øu t·ªë c·ªët l√µi gi√∫p ƒë·∫£m b·∫£o t·ªëc ƒë·ªô truy·ªÅn t·∫£i, b·∫£o m·∫≠t, v√† kh·∫£ nƒÉng m·ªü r·ªông cho h·∫° t·∫ßng s·ªë c·ªßa doanh nghi·ªáp.
            </p>
          </motion.div>
        </div>
      </section>

      {/* Benefits Section */}
      <section ref={benefitsRef} className="py-20 lg:py-32 bg-white">
        <div className="max-w-7xl mx-auto px-6 lg:px-8">
          <motion.div
            variants={fadeInUp}
            initial="hidden"
            animate={benefitsInView ? "visible" : "hidden"}
            className="text-center mb-16"
          >
            <h2 className="text-3xl lg:text-5xl font-bold text-gray-900 mb-6">
              L·ª£i √≠ch ch√≠nh c·ªßa CLOUD Networking
            </h2>
          </motion.div>

          <motion.div
            variants={staggerContainer}
            initial="hidden"
            animate={benefitsInView ? "visible" : "hidden"}
            className="grid md:grid-cols-2 gap-8 lg:gap-12"
          >
            {benefits.map((benefit, index) => (
              <motion.div
                key={index}
                variants={fadeInUp}
                className="bg-white rounded-2xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1 border border-gray-100 hover:border-cyan-200"
              >
                <h3 className="text-xl lg:text-2xl font-bold text-gray-900 mb-4">
                  {benefit.title}
                </h3>
                <p className="text-gray-600 leading-relaxed">
                  {benefit.description}
                </p>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </section>

      {/* Features Section */}
      <section ref={featuresRef} className="py-20 lg:py-32 bg-slate-50">
        <div className="max-w-7xl mx-auto px-6 lg:px-8">
          <motion.div
            variants={fadeInUp}
            initial="hidden"
            animate={featuresInView ? "visible" : "hidden"}
            className="text-center mb-16"
          >
            <h2 className="text-3xl lg:text-5xl font-bold text-gray-900 mb-6">
              T√≠nh nƒÉng n·ªïi b·∫≠t c·ªßa Cloud Networking
            </h2>
          </motion.div>

          <motion.div
            variants={staggerContainer}
            initial="hidden"
            animate={featuresInView ? "visible" : "hidden"}
            className="grid md:grid-cols-2 gap-8 lg:gap-12"
          >
            {features.map((feature, index) => (
              <motion.div
                key={index}
                variants={fadeInUp}
                className="bg-white rounded-2xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1 border-l-4 border-l-cyan-400 border border-gray-100"
              >
                <h3 className="text-xl lg:text-2xl font-bold text-gray-900 mb-4">
                  {feature.title}
                </h3>
                <p className="text-gray-600 leading-relaxed">
                  {feature.description}
                </p>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </section>

      {/* Use Cases Section */}
      <section ref={useCasesRef} className="py-20 lg:py-32 bg-white">
        <div className="max-w-7xl mx-auto px-6 lg:px-8">
          <motion.div
            variants={fadeInUp}
            initial="hidden"
            animate={useCasesInView ? "visible" : "hidden"}
            className="text-center mb-16"
          >
            <h2 className="text-3xl lg:text-5xl font-bold text-gray-900 mb-6">
              T√¨nh hu·ªëng ·ª©ng d·ª•ng th·ª±c t·∫ø
            </h2>
          </motion.div>

          <motion.div
            variants={staggerContainer}
            initial="hidden"
            animate={useCasesInView ? "visible" : "hidden"}
            className="grid md:grid-cols-2 gap-8 lg:gap-12"
          >
            {useCases.map((useCase, index) => (
              <motion.div
                key={index}
                variants={fadeInUp}
                className="bg-white rounded-2xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1 border border-gray-100 group hover:border-cyan-200"
              >
                <h3 className="text-xl lg:text-2xl font-bold text-gray-900 mb-4 group-hover:text-cyan-600 transition-colors duration-300">
                  {useCase.title}
                </h3>
                <p className="text-gray-600 leading-relaxed">
                  {useCase.description}
                </p>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 lg:py-32 bg-gradient-to-r from-[#2E1065] via-[#1A0B3D] to-[#0F0B3D]">
        <div className="max-w-7xl mx-auto px-6 lg:px-8 text-center">
          <motion.div
            variants={fadeInUp}
            initial="hidden"
            whileInView="visible"
            viewport={{ once: true }}
          >
            <h2 className="text-3xl lg:text-5xl font-bold text-white mb-8 leading-tight">
              TƒÉng t·ªëc k·∫øt n·ªëi, ki·ªÉm so√°t l∆∞u l∆∞·ª£ng v√† b·∫£o v·ªá to√†n b·ªô h·ªá th·ªëng c·ªßa b·∫°n
            </h2>
            <Link href="/contact">
              <Button size="lg" className="bg-gradient-to-r from-cyan-400 to-green-400 hover:from-cyan-500 hover:to-green-500 text-white px-8 py-3 text-lg font-semibold">
                Li√™n h·ªá t∆∞ v·∫•n mi·ªÖn ph√≠
              </Button>
            </Link>
          </motion.div>
        </div>
      </section>
    </main>
  )
}

export default NetworkingPage 